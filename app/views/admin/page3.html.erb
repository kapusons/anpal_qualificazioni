<%=
  active_admin_form_for [:admin, @application], url: url do |f|
    f.inputs do
      f.has_many :learning_opportunities, allow_destroy: true, class: "columns" do |b|
        # need_preload = b.object.region_id.blank? && f.object.region_id.present? && f.object.region_id != Region.find_by(name: "Italia").try(:id)
        b.input :city, as: :nested_select,
                level_1: { attribute: :region_id}, #, collection: Region.without_italy, selected: need_preload ? f.object.region : b.object.region_id },
                level_2: { attribute: :province_id }, #.merge(need_preload ? { collection: Province.where(region_id: f.object.region_id) } : {}),
                level_3: { attribute: :city_id }
        b.input :duration
        b.input :institution
        # Cosi optgroup non selezionabili
        # b.input :manner_ids, as: :select, collection: option_groups_from_collection_for_select(Manner.where(parent_siu_id: nil), :child, :name, :id, :name), multiple: true, required: true
        b.input :manner_ids, as: :select, collection: Manner.all.map { |a| [a.name, a.id, class: a.parent_siu_id.present? ? 'child' : 'parent']}, multiple: true, required: true
        b.input :start_at, as: :datepicker,
                datepicker_options: {
                  date_format:  I18n.t("date.formats.custom")
                }, input_html: { value: b.object.start_at.try(:strftime, I18n.t("date.formats.ruby_custom")) }
        b.input :end_at, as: :datepicker,
                datepicker_options: {
                  # min_date: 3.days.ago.to_date,
                  # max_date: "+1W +5D"
                  date_format: I18n.t("date.formats.custom")
                }, input_html: { value: b.object.end_at.try(:strftime, I18n.t("date.formats.ruby_custom")) }
        b.input :url
        b.input :description, as: :text
      end
      f.actions do
        f.action :submit, label: I18n.t("active_admin.actions.application.save")
        cancel_link
      end
    end
  end
%>